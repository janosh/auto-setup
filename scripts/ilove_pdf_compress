#!/usr/bin/env python

# Uses the free iLovePDF API to compress PDF files.
# https://developer.ilovepdf.com
# Call e.g. as `ilove_pdf_compress **/*.pdf`.
# Warning: This script compresses files in place.

import os
import sys
from os.path import basename, dirname, expanduser

from dotenv import load_dotenv
from pylovepdf.tools.compress import Compress

ROOT = dirname(dirname(os.readlink(__file__)))

load_dotenv(dotenv_path=ROOT + "/.env")
ILP_KEY = os.getenv("ILOVEPDF_PUBLIC_KEY")

assert ILP_KEY, f"Invalid iLovePDF API key: {ILP_KEY}"

# if filenames received as command line arguments are relative paths,
# convert to absolute paths
paths = [a if a.startswith("/") else f"{os.getcwd()}/{a}" for a in sys.argv]
# Keep only paths pointing to PDFs that exist.
pdfs = [p for p in paths if p.endswith(".pdf") and os.path.exists(p)]

assert pdfs, "Invalid arguments, no PDFs found."

print(f"{(n_pdfs := len(pdfs))} PDFs to be compressed with iLovePDF:")
for pdf in pdfs:
    print(f"- {basename(pdf)}")

trash_path = f"{expanduser('~')}/.Trash"


# https://stackoverflow.com/a/1094933
def sizeof_fmt(size):
    for unit in ["B", "KB", "MB", "GB", "TB", "PB"]:
        if abs(size) < 1024:
            return f"{size:3.1f} {unit}"
        size /= 1024


for idx, pdf_path in enumerate(pdfs, 1):
    task = Compress(ILP_KEY)
    # task.compression_level = "extreme" # one of low, recommended, extreme

    task.add_file(pdf_path)

    dir_name, pdf_name = os.path.split(pdf_path)

    task.set_output_folder(dir_name)
    task.execute()
    compressed_pdf_name = task.download()
    task.delete_current_task()

    compressed_pdf_path = f"{dir_name}/{compressed_pdf_name}"

    orig_size = os.path.getsize(pdf_path)
    compressed_size = os.path.getsize(compressed_pdf_path)

    diff = orig_size - compressed_size
    if diff > 0:
        percent_diff = 100 * diff / orig_size
        print(
            f"{idx}/{n_pdfs} Compressed PDF '{pdf_name}' is {sizeof_fmt(diff)}"
            f" ({percent_diff:.2g}%) smaller than the original "
            f"({sizeof_fmt(compressed_size)} vs {sizeof_fmt(orig_size)}). "
            "Using compressed file."
        )
        if sys.platform == "darwin":  # move file to trash on macOS
            print("Old file moved to trash.\n")
            os.rename(pdf_path, f"{trash_path}/{pdf_name}")
        else:  # simply delete it on other OSes
            print("Old file deleted.\n")
            os.remove(pdf_path)
        os.rename(compressed_pdf_path, pdf_path)
    else:
        print(
            f"{idx}/{n_pdfs} Compressed '{pdf_name}' no smaller than original "
            "file. Keeping original."
        )
        os.remove(compressed_pdf_path)
